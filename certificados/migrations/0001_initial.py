# Generated by Django 5.1.7 on 2025-03-30 16:53

import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=200)),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino')], max_length=1)),
                ('data_nascimento', models.DateField()),
                ('local_nascimento', models.CharField(max_length=100)),
                ('nome_pai', models.CharField(max_length=100)),
                ('nome_mae', models.CharField(max_length=100)),
                ('numero_identificacao', models.CharField(max_length=20, unique=True)),
                ('tipo_identificacao', models.CharField(default='Bilhete de Identidade', max_length=50)),
                ('data_emissao_identificacao', models.DateField()),
                ('emissor_identificacao', models.CharField(max_length=100)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='alunos/fotos/')),
            ],
            options={
                'verbose_name_plural': 'Alunos',
            },
        ),
        migrations.CreateModel(
            name='AreaFormacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('codigo', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConfiguracaoSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_instituicao', models.CharField(default='Instituto Médio Industrial de Luanda', max_length=200)),
                ('endereco_instituicao', models.TextField(default='Luanda, Angola')),
                ('ministro_educacao', models.CharField(default='Ministério da Educação', max_length=100)),
                ('texto_certificado', models.TextField(default='CERTIFICO em cumprimento do despacho exarado em requerimento que fica arquivado nesta Secretaria...')),
                ('rodape_certificado', models.TextField(default='Para efeitos legais é passado o presente CERTIFICADO que consta no livro de registo...')),
            ],
            options={
                'verbose_name_plural': 'Configurações do Sistema',
            },
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('carga_horaria', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Provincia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('papel', models.CharField(choices=[('SECRETARIA', 'Secretaria'), ('ADMIN', 'Administrador'), ('DIRECAO', 'Direção')], max_length=10)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('tipo', models.CharField(choices=[('MEDIO', 'Curso Médio'), ('BASICO', 'Curso Básico')], max_length=10)),
                ('duracao_anos', models.PositiveSmallIntegerField()),
                ('area_formacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='certificados.areaformacao')),
            ],
        ),
        migrations.CreateModel(
            name='Matricula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_matricula', models.CharField(max_length=20, unique=True)),
                ('data_matricula', models.DateField()),
                ('ano_letivo', models.CharField(max_length=9)),
                ('nivel_classe', models.CharField(max_length=20)),
                ('turno', models.CharField(choices=[('DIURNO', 'Diurno'), ('NOTURNO', 'Noturno')], max_length=10)),
                ('ativo', models.BooleanField(default=True)),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matriculas', to='certificados.aluno')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='certificados.curso')),
            ],
            options={
                'verbose_name_plural': 'Matrículas',
            },
        ),
        migrations.CreateModel(
            name='Certificado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_certificado', models.CharField(editable=False, max_length=20, unique=True)),
                ('numero_processo', models.CharField(max_length=20)),
                ('livro_registo', models.CharField(editable=False, max_length=50)),
                ('data_emissao', models.DateField(auto_now_add=True)),
                ('ano_letivo', models.CharField(editable=False, max_length=9)),
                ('cargo_diretor', models.CharField(default='Directora do Instituto Médio Industrial de Luanda', max_length=100)),
                ('media_curricular', models.DecimalField(decimal_places=2, editable=False, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('prova_aptidao_profissional', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('classificacao_final', models.DecimalField(decimal_places=2, editable=False, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('codigo_qr', models.ImageField(blank=True, editable=False, upload_to='codigos_qr/')),
                ('codigo_verificacao', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('criado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='certificados_criados', to=settings.AUTH_USER_MODEL)),
                ('diretor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='certificados_emitidos', to=settings.AUTH_USER_MODEL)),
                ('matricula', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='certificados', to='certificados.matricula')),
            ],
            options={
                'verbose_name_plural': 'Certificados',
                'ordering': ['-data_emissao'],
            },
        ),
        migrations.CreateModel(
            name='Notificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensagem', models.TextField()),
                ('lida', models.BooleanField(default=False)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificação',
                'verbose_name_plural': 'Notificações',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='PedidoCorrecao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_solicitacao', models.DateTimeField(auto_now_add=True)),
                ('descricao', models.TextField()),
                ('estado', models.CharField(choices=[('PENDENTE', 'Pendente'), ('APROVADO', 'Aprovado'), ('REJEITADO', 'Rejeitado')], default='PENDENTE', max_length=10)),
                ('data_resolucao', models.DateTimeField(blank=True, null=True)),
                ('notas_resolucao', models.TextField(blank=True)),
                ('certificado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos_correcao', to='certificados.certificado')),
                ('resolvido_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pedidos_resolvidos', to=settings.AUTH_USER_MODEL)),
                ('solicitado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pedido de Correção',
                'verbose_name_plural': 'Pedidos de Correção',
                'ordering': ['-data_solicitacao'],
            },
        ),
        migrations.AddField(
            model_name='aluno',
            name='provincia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='certificados.provincia'),
        ),
        migrations.CreateModel(
            name='RegistroAuditoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accao', models.CharField(choices=[('CRIAR', 'Criar'), ('ATUALIZAR', 'Atualizar'), ('APAGAR', 'Apagar'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('VERIFICAR', 'Verificar'), ('DESCARREGAR', 'Descarregar')], max_length=11)),
                ('modelo', models.CharField(max_length=50)),
                ('id_objeto', models.CharField(blank=True, max_length=50, null=True)),
                ('detalhes', models.TextField(blank=True)),
                ('endereco_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('data_hora', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registro de Auditoria',
                'verbose_name_plural': 'Registros de Auditoria',
                'ordering': ['-data_hora'],
            },
        ),
        migrations.CreateModel(
            name='CursoDisciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semestre', models.PositiveSmallIntegerField()),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='certificados.curso')),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='certificados.disciplina')),
            ],
            options={
                'ordering': ['semestre', 'disciplina__nome'],
                'unique_together': {('curso', 'disciplina')},
            },
        ),
        migrations.CreateModel(
            name='ResultadoDisciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota_numerica', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('nota_literal', models.CharField(editable=False, max_length=20)),
                ('certificado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resultados_disciplinas', to='certificados.certificado')),
                ('disciplina', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='certificados.disciplina')),
            ],
            options={
                'verbose_name': 'Resultado de Disciplina',
                'verbose_name_plural': 'Resultados de Disciplinas',
                'ordering': ['disciplina__nome'],
                'unique_together': {('certificado', 'disciplina')},
            },
        ),
    ]
